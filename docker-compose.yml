version: '2'
services:
    apache-php:
        build:
            context: ./build/apache-php
            dockerfile: Dockerfile
            args:
                - APIV2_SERVERNAME=${APIV2_SERVERNAME}
                - APIV2_DOCUMENT_ROOT=${APIV2_DOCUMENT_ROOT}
                - WWW_SERVERNAME=${WWW_SERVERNAME}
                - WWW_DOCUMENT_ROOT=${WWW_DOCUMENT_ROOT}
                - API_SERVERNAME=${API_SERVERNAME}
                - API_DOCUMENT_ROOT=${API_DOCUMENT_ROOT}
                - ADMIN_SERVERNAME=${ADMIN_SERVERNAME}
                - ADMIN_DOCUMENT_ROOT=${ADMIN_DOCUMENT_ROOT}
                - KONTROL_SERVERNAME=${KONTROL_SERVERNAME}
                - KONTROL_DOCUMENT_ROOT=${KONTROL_DOCUMENT_ROOT}
                - PAGOS_SERVERNAME=${PAGOS_SERVERNAME}
                - PAGOS_DOCUMENT_ROOT=${PAGOS_DOCUMENT_ROOT}
                - KAD_SERVERNAME=${KAD_SERVERNAME}
                - KAD_DOCUMENT_ROOT=${KAD_DOCUMENT_ROOT}
                - EXPERT_SERVERNAME=${EXPERT_SERVERNAME}
                - EXPERT_DOCUMENT_ROOT=${EXPERT_DOCUMENT_ROOT}
                - ATOMICO_SERVERNAME=${ATOMICO_SERVERNAME}
                - ATOMICO_DOCUMENT_ROOT=${ATOMICO_DOCUMENT_ROOT}
        image: kichink/apache-php
        env_file:
          - ./.env
        ports:
            - "${APACHE_PORT}:80"
        environment:
            PHP_XDEBUG_ENABLED: 1
            XDEBUG_CONFIG: remote_host=${REMOTE_HOST} remote_enable=on
        volumes:
            - ${APPLICATIONS_PATH}:/var/www/html
        networks:
            - appnet
    node-utils:
        build:
            context: ./build/node-utils
            dockerfile: Dockerfile
        image: kichink/node-utils
        networks:
            - appnet
    redis:
        image: redis:alpine
        ports:
            - "6379:6379"
        networks:
            - appnet
    db:
        image: mysql:5.6.34
        ports:
            - "${MYSQL_PORT}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - ./db:/docker-entrypoint-initdb.d
            - data:/var/lib/mysql
            - ./db/conf:/etc/mysql
        networks:
            - appnet
networks:
    appnet:
        driver: "bridge"
volumes:
    data:
        driver: "local"
